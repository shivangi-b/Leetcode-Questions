class Solution {
public:
    vector<string> findWords(vector<string>& words) {
        vector<string>v;
        unordered_map<char,int>rows({
            {'q',1}, {'w',1}, {'e',1}, {'r',1}, {'t',1}, {'y',1}, {'u',1}, {'i',1}, {'o',1},               {'p',1},
            {'a',2}, {'s',2}, {'d',2}, {'f',2}, {'g',2}, {'h',2}, {'j',2}, {'k',2}, {'l',2},
            {'z',3}, {'x',3}, {'c',3}, {'v',3}, {'b',3}, {'n',3}, {'m',3},
        });
        int startingnum;
        for(int i=0;i<words.size();i++)
        {
            startingnum=rows[tolower(words[i][0])];
            int flag=0;
            for(int j=1;j<words[i].size();j++)
            {
                if(rows[tolower(words[i][j])]!=startingnum)
                {
                    flag=1;
                    break;
                }
            }
            if(flag==0)
                v.push_back(words[i]);
        }
        return v;
    }
};
